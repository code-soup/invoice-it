$sprites: (
    'twitter': "data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M64 32A32 32 0 1132 0a32 32 0 0132 32zM26.14 48.88c14.2 0 22-11.76 22-22v-1a16 16 0 003.86-4 15.93 15.93 0 01-4.44 1.21 7.73 7.73 0 003.4-4.27A15.61 15.61 0 0146 20.75 7.72 7.72 0 0032.66 26a7.25 7.25 0 00.2 1.76A21.9 21.9 0 0117 19.73 7.71 7.71 0 0019.36 30a7.78 7.78 0 01-3.49-1v.09a7.73 7.73 0 006.19 7.57A7.48 7.48 0 0120 37a7.83 7.83 0 01-1.45-.14 7.7 7.7 0 007.2 5.36 15.54 15.54 0 01-9.59 3.29 14.09 14.09 0 01-1.84-.11 21.49 21.49 0 0011.79 3.49'/%3e%3c/svg%3e"
);

$sizes: (
    'twitter': (
        'width': 64px,
        'height': 64px
    )
);

$variables: (
    /* EMPTY */
);

// https://github.com/waldemarfm/sass-svg-uri/blob/v1.0.0/_svg-uri.scss
@function sprite-str-replace($string, $search, $replace: '') {
    $index: str-index($string, $search);

    @if type-of($replace) == 'null' {
        $replace: '';
    }

    @if ( $index ) {
        @return str-slice($string, 1, $index - 1) + $replace + sprite-str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
    }

    @return $string;
}

@function sprite-svg-uri($value) {
    $encoded: '';
    $slice: 2000;
    $index: 0;

    @for $i from 1 through ceil(str-length($value) / $slice) {
        $chunk: str-slice($value, $index, $index + $slice - 1);
        $chunk: sprite-str-replace($chunk, '"', "'");
        $chunk: sprite-str-replace($chunk, '<', '%3C');
        $chunk: sprite-str-replace($chunk, '>', '%3E');
        $chunk: sprite-str-replace($chunk, '&', '%26');
        $chunk: sprite-str-replace($chunk, '#', '%23');
        $encoded: #{$encoded}#{$chunk};
        $index: $index + $slice;
    }

    @return $encoded;
}

@mixin sprite($name, $user-variables: (), $include-size: false) {
    $sprite: map-get($sprites, $name);

    // Inject variables
    $default-variables: map-get($variables, $name);
    @if type-of($default-variables) == 'map' {
        @each $key, $value in map-merge($default-variables, $user-variables) {
            @if ( not map-has-key($default-variables, $key) ) {
                @warn 'Sprite \'#{$name}\' does not support variable named \'#{$key}\'';
            }

            $sprite: sprite-str-replace($sprite, '___#{$key}___', sprite-svg-uri(quote(#{$value})));
        }
    } @else if type-of($user-variables) == 'map' {
        @warn 'Sprite \'#{$name}\' does not contain any variables';
    }

    background: url($sprite) center no-repeat;

    @if $include-size {
        $size: map-get($sizes, $name);
        @if $include-size == true {
            background-size: map-get($size, width) map-get($size, height);
        } @else if $include-size == 'box' {
            width: map-get($size, width);
            height: map-get($size, height);
        }
    }
}
